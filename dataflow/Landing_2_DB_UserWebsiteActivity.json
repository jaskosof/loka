{
	"name": "Landing_2_DB_UserWebsiteActivity",
	"properties": {
		"folder": {
			"name": "Facts"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CMS_V2_DL_Landing_folder",
						"type": "DatasetReference"
					},
					"name": "TrackUserWebsite"
				},
				{
					"dataset": {
						"referenceName": "CMS_V2_DL_folder",
						"type": "DatasetReference"
					},
					"name": "Site"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSQL_Insight_table",
						"type": "DatasetReference"
					},
					"name": "SinkFactUserWebsiteSnapshot"
				}
			],
			"transformations": [
				{
					"name": "SelectTrackUserWebsite"
				},
				{
					"name": "MapColumnsTrackUserWebsite",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "ParseTrackUserWebsite"
				},
				{
					"name": "FilterTrackUserWebsite",
					"description": "Include only urls starting with /search, having gclid value, having cookieID and userID = 0"
				},
				{
					"name": "MapColumnsSite",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "Join1"
				},
				{
					"name": "SelectSite"
				}
			],
			"script": "parameters{\n\tFolderName as string\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tmoveFiles: [('CMS_V2_landing/' + $FolderName),('CMS_V2/' + $FolderName)],\n\tdocumentForm: 'documentPerLine') ~> TrackUserWebsite\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> Site\nParseTrackUserWebsite select(mapColumn(\n\t\tTrackUserWebsiteId,\n\t\tUrlData,\n\t\tViewedOnDate,\n\t\tSourceID,\n\t\tParsedData\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTrackUserWebsite\nTrackUserWebsite derive(SourceID = 3,\n\t\tTrackUserWebsiteId = toInteger(byName('TrackUserWebsiteId')),\n\t\tViewedOnDate = toDate(left(toString(byName('ViewedOn')), 10)),\n\t\tUrlData = toString(byName('UrlData'))) ~> MapColumnsTrackUserWebsite\nMapColumnsTrackUserWebsite parse(ParsedData = UrlData ? (userid as integer,\n\t\tsiteid as integer,\n\t\tcookieid as string,\n\t\trequestbaseurl as string,\n\t\tgclid as string,\n\t\tALCampaign as string,\n\t\tALAdGroup as string),\n\tformat: 'json',\n\tdocumentForm: 'singleDocument') ~> ParseTrackUserWebsite\nSelectTrackUserWebsite filter(and(and(and(left(ParsedData.requestbaseurl, 7) == '/Search', or(or(not(isNull(ParsedData.gclid)), not(isNull(ParsedData.ALCampaign))), not(isNull(ParsedData.ALAdGroup)))), ParsedData.userid == 0), not(isNull(ParsedData.cookieid)))) ~> FilterTrackUserWebsite\nSite derive(ServerId = toInteger(byName('ServerId')),\n\t\tSiteId = toInteger(byName('SiteId'))) ~> MapColumnsSite\nFilterTrackUserWebsite, SelectSite join(ParsedData.siteid == SiteId,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nMapColumnsSite select(mapColumn(\n\t\tServerId,\n\t\tSiteId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSite\nJoin1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstagingSchemaName: 'import',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tSourceID,\n\t\tViewedOnDate,\n\t\tSiteID = ParsedData.siteid,\n\t\tCookieID = ParsedData.cookieid,\n\t\tServerID = ServerId\n\t)) ~> SinkFactUserWebsiteSnapshot"
		}
	}
}