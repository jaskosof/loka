{
	"name": "Load DimServer",
	"properties": {
		"activities": [
			{
				"name": "Lookup server folder",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select * from [etl].[IncrementalLoadMark] WHERE SourceServer = 'CMS_V2' and SchemaName = 'dbo' and TableName = 'Server'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "BIServer_SQL",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Get files from landing folder",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Lookup server folder",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "CMS_V2_DL_Landing_folder",
						"type": "DatasetReference",
						"parameters": {
							"FolderName": {
								"value": "@activity('Lookup server folder').output.firstRow.FolderName",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "Files exist",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get files from landing folder",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(length(activity('Get files from landing folder').output.childItems), 0)\n\n\n",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Load DimServer from raw to import",
							"description": "Transform Server data to form DimSource",
							"type": "ExecuteDataFlow",
							"dependsOn": [
								{
									"activity": "Truncate import table",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "1.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "Landing_2_DB_Server",
									"type": "DataFlowReference",
									"parameters": {
										"FolderName": {
											"value": "'@{activity('Lookup server folder').output.firstRow.FolderName}'",
											"type": "Expression"
										}
									},
									"datasetParameters": {
										"Raw2DB": {
											"FolderName": {
												"value": "@activity('Lookup server folder').output.firstRow.FolderName",
												"type": "Expression"
											}
										},
										"sink1": {
											"Schema": "import",
											"TableName": "DimServer"
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						},
						{
							"name": "Load data from import to dbo",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Reinitialize DimServer",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_DimServer_Load_Data]",
								"storedProcedureParameters": {
									"LogID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSQL_Insight",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Reinitialize DimServer",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Load DimServer from raw to import",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_DimServer_Insert_UnknownMember]",
								"storedProcedureParameters": {
									"pRemoveExistingData": {
										"value": {
											"value": "@int(pipeline().parameters.shouldReinitialize)",
											"type": "Expression"
										},
										"type": "Int16"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSQL_Insight",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Truncate import table",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[import].[usp_ImportTable_Truncate_Data]",
								"storedProcedureParameters": {
									"TableName": {
										"value": "DimServer",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSQL_Insight",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"shouldReinitialize": {
				"type": "bool",
				"defaultValue": false
			}
		},
		"folder": {
			"name": "Dimensions"
		},
		"annotations": [],
		"lastPublishTime": "2021-11-22T11:34:43Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}